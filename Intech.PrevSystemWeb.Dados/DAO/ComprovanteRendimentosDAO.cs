#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystemWeb.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystemWeb.Dados.DAO
{   
    public abstract class ComprovanteRendimentosDAO : BaseDAO<ComprovanteRendimentosEntidade>
    {
        
		public virtual IEnumerable<ComprovanteRendimentosEntidade> BuscarDatasPorCdPessoa(int CD_PESSOA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<ComprovanteRendimentosEntidade>("SELECT DISTINCT       EX.ANO_EXERCICIO,      EX.ANO_CALENDARIO   FROM FI_COMPROVANTE_RENDIMENTOS CR  INNER JOIN FI_EXERCICIO_TRIBUTO EX ON EX.SQ_EXERCICIO = CR.SQ_EXERCICIO  WHERE CR.CD_PESSOA = @CD_PESSOA", new { CD_PESSOA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<ComprovanteRendimentosEntidade>("SELECT DISTINCT EX.ANO_EXERCICIO, EX.ANO_CALENDARIO FROM FI_COMPROVANTE_RENDIMENTOS  CR  INNER  JOIN FI_EXERCICIO_TRIBUTO   EX  ON EX.SQ_EXERCICIO=CR.SQ_EXERCICIO WHERE CR.CD_PESSOA=:CD_PESSOA", new { CD_PESSOA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<ComprovanteRendimentosEntidade> BuscarPorCdPessoaAnoCalendario(int CD_PESSOA, string ANO_CALENDARIO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<ComprovanteRendimentosEntidade>("SELECT CR.SQ_DECLARACAO,         CR.VL_DECLARACAO,         CC.VL_DECLARACAO AS VL_COMPLEMENTAR,         EX.ANO_CALENDARIO,         EX.ANO_EXERCICIO,         CO.CD_RECEITA,         CO.DS_RECEITA,         ID.NR_ITEM_DECLARACAO,         ID.DS_ITEM_DECLARACAO,         ID.NR_POSICAO_COLUNA  FROM FI_COMPROVANTE_RENDIMENTOS CR      INNER JOIN FI_EXERCICIO_TRIBUTO EX ON EX.SQ_EXERCICIO = CR.SQ_EXERCICIO      INNER JOIN FI_ITEM_DECLARACAO ID ON ID.SQ_ITEM_DECLARACAO = CR.SQ_ITEM_DECLARACAO      INNER JOIN FI_CODIGO_RECEITA CO ON CO.SQ_CODIGO = CR.SQ_CODIGO      LEFT OUTER JOIN FI_COMPROVANTE_COMPLEMENTAR CC ON CC.SQ_DECLARACAO = CR.SQ_DECLARACAO      LEFT OUTER JOIN FI_PESSOA PE ON PE.CD_PESSOA = CC.CD_PESSOA      LEFT OUTER JOIN FI_PESSOA_FISICA PF ON PF.CD_PESSOA = CC.CD_PESSOA  WHERE CR.CD_PESSOA = @CD_PESSOA    AND EX.ANO_CALENDARIO = @ANO_CALENDARIO  ORDER BY ID.NR_ITEM_DECLARACAO", new { CD_PESSOA, ANO_CALENDARIO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<ComprovanteRendimentosEntidade>("SELECT CR.SQ_DECLARACAO, CR.VL_DECLARACAO, CC.VL_DECLARACAO AS VL_COMPLEMENTAR, EX.ANO_CALENDARIO, EX.ANO_EXERCICIO, CO.CD_RECEITA, CO.DS_RECEITA, ID.NR_ITEM_DECLARACAO, ID.DS_ITEM_DECLARACAO, ID.NR_POSICAO_COLUNA FROM FI_COMPROVANTE_RENDIMENTOS  CR  INNER  JOIN FI_EXERCICIO_TRIBUTO   EX  ON EX.SQ_EXERCICIO=CR.SQ_EXERCICIO INNER  JOIN FI_ITEM_DECLARACAO   ID  ON ID.SQ_ITEM_DECLARACAO=CR.SQ_ITEM_DECLARACAO INNER  JOIN FI_CODIGO_RECEITA   CO  ON CO.SQ_CODIGO=CR.SQ_CODIGO LEFT OUTER JOIN FI_COMPROVANTE_COMPLEMENTAR   CC  ON CC.SQ_DECLARACAO=CR.SQ_DECLARACAO LEFT OUTER JOIN FI_PESSOA   PE  ON PE.CD_PESSOA=CC.CD_PESSOA LEFT OUTER JOIN FI_PESSOA_FISICA   PF  ON PF.CD_PESSOA=CC.CD_PESSOA WHERE CR.CD_PESSOA=:CD_PESSOA AND EX.ANO_CALENDARIO=:ANO_CALENDARIO ORDER BY ID.NR_ITEM_DECLARACAO", new { CD_PESSOA, ANO_CALENDARIO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
