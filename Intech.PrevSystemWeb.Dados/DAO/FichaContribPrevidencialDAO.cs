#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystemWeb.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystemWeb.Dados.DAO
{   
    public abstract class FichaContribPrevidencialDAO : BaseDAO<FichaContribPrevidencialEntidade>
    {
        
		public virtual DateTime BuscarDataPrimeiraContribuicao(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MIN(DT_REFERENCIA)   FROM FI_FICHA_CONTRIB_PREVIDENCIAL   WHERE SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO   AND SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MIN(DT_REFERENCIA) FROM FI_FICHA_CONTRIB_PREVIDENCIAL WHERE SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarDataUltimaContribuicao(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA)   FROM FI_FICHA_CONTRIB_PREVIDENCIAL   WHERE SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO   AND SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM FI_FICHA_CONTRIB_PREVIDENCIAL WHERE SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarPorContratoPlanoFundo(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL, int SQ_TIPO_FUNDO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT   	FI_FICHA_CONTRIB_PREVIDENCIAL.*,      FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO,  	FI_TIPO_COBRANCA.DS_TIPO_COBRANCA  FROM FI_FICHA_CONTRIB_PREVIDENCIAL   INNER JOIN FI_FUNDO_CONTRIBUICAO ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO  INNER JOIN FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA  WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO    AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL    AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO = @SQ_TIPO_FUNDO  ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, SQ_TIPO_FUNDO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.*, FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO=:SQ_TIPO_FUNDO ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, SQ_TIPO_FUNDO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarPorPlanoContratoNaturezaPeriodo(int SQ_PLANO_PREVIDENCIAL, int SQ_CONTRATO_TRABALHO, string NATUREZA, DateTime DT_INICIAL, DateTime DT_FINAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT CO.DT_REFERENCIA,         CO.DT_COMPETENCIA,         CO.DT_APORTE,         FC.DS_TIPO_FUNDO,         TC.DS_TIPO_COBRANCA,         CO.IR_OPERACAO,         CO.VL_CONTRIBUICAO,         CO.QT_COTA_CONTRIBUICAO,         CO.VL_COTA,         TC.IC_NATUREZA_COBRANCA,         CO.SQ_PLANO_PREVIDENCIAL,         co.*    FROM fi_ficha_contrib_previdencial CO         INNER JOIN fi_tipo_cobranca TC ON TC.SQ_TIPO_COBRANCA = CO.SQ_TIPO_COBRANCA         INNER JOIN fi_fundo_contribuicao FC ON FC.SQ_TIPO_FUNDO = CO.SQ_TIPO_FUNDO AND FC.SQ_PLANO_PREVIDENCIAL = CO.SQ_PLANO_PREVIDENCIAL   WHERE CO.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL    AND CO.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO    AND TC.IC_NATUREZA_COBRANCA = @NATUREZA    AND CO.DT_REFERENCIA >= @DT_INICIAL    AND CO.DT_REFERENCIA <= @DT_FINAL  ORDER BY CO.DT_REFERENCIA, TC.DS_TIPO_COBRANCA, CO.DT_APORTE", new { SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO, NATUREZA, DT_INICIAL, DT_FINAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT CO.DT_REFERENCIA, CO.DT_COMPETENCIA, CO.DT_APORTE, FC.DS_TIPO_FUNDO, TC.DS_TIPO_COBRANCA, CO.IR_OPERACAO, CO.VL_CONTRIBUICAO, CO.QT_COTA_CONTRIBUICAO, CO.VL_COTA, TC.IC_NATUREZA_COBRANCA, CO.SQ_PLANO_PREVIDENCIAL, CO.* FROM FI_FICHA_CONTRIB_PREVIDENCIAL  CO  INNER  JOIN FI_TIPO_COBRANCA   TC  ON TC.SQ_TIPO_COBRANCA=CO.SQ_TIPO_COBRANCA INNER  JOIN FI_FUNDO_CONTRIBUICAO   FC  ON FC.SQ_TIPO_FUNDO=CO.SQ_TIPO_FUNDO AND FC.SQ_PLANO_PREVIDENCIAL=CO.SQ_PLANO_PREVIDENCIAL WHERE CO.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND CO.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND TC.IC_NATUREZA_COBRANCA=:NATUREZA AND CO.DT_REFERENCIA>=:DT_INICIAL AND CO.DT_REFERENCIA<=:DT_FINAL ORDER BY CO.DT_REFERENCIA, TC.DS_TIPO_COBRANCA, CO.DT_APORTE", new { SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO, NATUREZA, DT_INICIAL, DT_FINAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarResumo(int SQ_PLANO_PREVIDENCIAL, int SQ_CONTRATO_TRABALHO, string NATUREZA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT CO.SQ_PLANO_PREVIDENCIAL,         FC.DS_TIPO_FUNDO,         CO.IR_OPERACAO,         SUM(CO.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO              FROM fi_ficha_contrib_previdencial CO         INNER JOIN fi_tipo_cobranca TC ON TC.SQ_TIPO_COBRANCA = CO.SQ_TIPO_COBRANCA         INNER JOIN fi_fundo_contribuicao FC ON FC.SQ_TIPO_FUNDO = CO.SQ_TIPO_FUNDO AND FC.SQ_PLANO_PREVIDENCIAL = CO.SQ_PLANO_PREVIDENCIAL   WHERE CO.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL    AND CO.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO    AND TC.IC_NATUREZA_COBRANCA = @NATUREZA  GROUP BY CO.SQ_PLANO_PREVIDENCIAL,         FC.DS_TIPO_FUNDO,         FC.DS_TIPO_FUNDO,         CO.IR_OPERACAO  ORDER BY CO.SQ_PLANO_PREVIDENCIAL, DS_TIPO_FUNDO, CO.IR_OPERACAO", new { SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO, NATUREZA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT CO.SQ_PLANO_PREVIDENCIAL, FC.DS_TIPO_FUNDO, CO.IR_OPERACAO, SUM(CO.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL  CO  INNER  JOIN FI_TIPO_COBRANCA   TC  ON TC.SQ_TIPO_COBRANCA=CO.SQ_TIPO_COBRANCA INNER  JOIN FI_FUNDO_CONTRIBUICAO   FC  ON FC.SQ_TIPO_FUNDO=CO.SQ_TIPO_FUNDO AND FC.SQ_PLANO_PREVIDENCIAL=CO.SQ_PLANO_PREVIDENCIAL WHERE CO.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND CO.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND TC.IC_NATUREZA_COBRANCA=:NATUREZA GROUP BY CO.SQ_PLANO_PREVIDENCIAL, FC.DS_TIPO_FUNDO, FC.DS_TIPO_FUNDO, CO.IR_OPERACAO ORDER BY CO.SQ_PLANO_PREVIDENCIAL, DS_TIPO_FUNDO, CO.IR_OPERACAO", new { SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO, NATUREZA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarUltimaPorContratoPlano(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT   	FI_FICHA_CONTRIB_PREVIDENCIAL.*,      FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO,  	FI_TIPO_COBRANCA.DS_TIPO_COBRANCA  FROM FI_FICHA_CONTRIB_PREVIDENCIAL   INNER JOIN FI_FUNDO_CONTRIBUICAO ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO  INNER JOIN FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA  WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO    AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL    AND FI_FICHA_CONTRIB_PREVIDENCIAL.DT_COMPETENCIA = (SELECT MAX(DT_COMPETENCIA)  													    FROM FI_FICHA_CONTRIB_PREVIDENCIAL FF2  													   WHERE FF2.SQ_PLANO_PREVIDENCIAL = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL  														 AND FF2.SQ_CONTRATO_TRABALHO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO)  ORDER BY FI_FICHA_CONTRIB_PREVIDENCIAL.DT_COMPETENCIA,         FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO,         FI_TIPO_COBRANCA.DS_TIPO_COBRANCA", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.*, FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND FI_FICHA_CONTRIB_PREVIDENCIAL.DT_COMPETENCIA=(SELECT MAX(DT_COMPETENCIA) FROM FI_FICHA_CONTRIB_PREVIDENCIAL  FF2  WHERE FF2.SQ_PLANO_PREVIDENCIAL=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL AND FF2.SQ_CONTRATO_TRABALHO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO) ORDER BY FI_FICHA_CONTRIB_PREVIDENCIAL.DT_COMPETENCIA, FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, FI_TIPO_COBRANCA.DS_TIPO_COBRANCA", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
