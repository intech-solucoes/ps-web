#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystemWeb.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystemWeb.Dados.DAO
{   
    public abstract class FichaContribPrevidencialDAO : BaseDAO<FichaContribPrevidencialEntidade>
    {
        
		public virtual DateTime BuscarDataPrimeiraContribuicao(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MIN(DT_REFERENCIA)  FROM FI_FICHA_CONTRIB_PREVIDENCIAL  WHERE SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO  AND SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MIN(DT_REFERENCIA) FROM FI_FICHA_CONTRIB_PREVIDENCIAL WHERE SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarDataUltimaContribuicao(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA)  FROM FI_FICHA_CONTRIB_PREVIDENCIAL  WHERE SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO  AND SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM FI_FICHA_CONTRIB_PREVIDENCIAL WHERE SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarPorContratoPlanoFundo(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL, int SQ_TIPO_FUNDO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT  	FI_FICHA_CONTRIB_PREVIDENCIAL.*,     FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, 	FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL  INNER JOIN FI_FUNDO_CONTRIBUICAO ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER JOIN FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO   AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL   AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO = @SQ_TIPO_FUNDO ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, SQ_TIPO_FUNDO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.*, FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO=:SQ_TIPO_FUNDO ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, SQ_TIPO_FUNDO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaContribPrevidencialEntidade> BuscarPorContratoPlanoReferencia(int SQ_CONTRATO_TRABALHO, int SQ_PLANO_PREVIDENCIAL, DateTime DT_REFERENCIA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT  	FI_FICHA_CONTRIB_PREVIDENCIAL.*,     FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, 	FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL  INNER JOIN FI_FUNDO_CONTRIBUICAO ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER JOIN FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO   AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL   AND FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA = @DT_REFERENCIA ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, DT_REFERENCIA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaContribPrevidencialEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.*, FI_FUNDO_CONTRIBUICAO.DS_TIPO_FUNDO, FI_TIPO_COBRANCA.DS_TIPO_COBRANCA FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO AND FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL AND FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA=:DT_REFERENCIA ORDER BY ID_CONTRIBUICAO", new { SQ_CONTRATO_TRABALHO, SQ_PLANO_PREVIDENCIAL, DT_REFERENCIA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
